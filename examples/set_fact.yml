---
# https://docs.ansible.com/ansible/latest/modules/set_fact_module.html#set-fact-module

# etcd_cluster_interface = eth0
- name: set_facts | Setting Cluster IP
  set_fact:
    etcd_cluster_ip: "{{ hostvars[inventory_hostname]['ansible_' + etcd_cluster_interface]['ipv4']['address'] }}"

- name: set_facts | Cluster IP
  debug: var=etcd_cluster_ip

- name: Define java_packages.
  set_fact:
    java_packages: "{{ __java_packages | list }}"
  when: java_packages is not defined

- name: Set __apr_installed if already configured
  set_fact:
    __apr_installed: "{% if __apr_version_if_exists|failed %}false{% else %}{{ __apr_version_if_exists.stdout == apr_version }}{% endif %}"

# Example setting host facts using key=value pairs, note that this always creates strings or booleans
- set_fact: one_fact="something" other_fact="{{ local_var }}"

# Example setting host facts using complex arguments
- set_fact:
     one_fact: something
     other_fact: "{{ local_var * 2 }}"
     another_fact: "{{ some_registered_var.results | map(attribute='ansible_facts.some_fact') | list }}"

# Example setting facts so that they will be persisted in the fact cache
- set_fact:
    one_fact: something
    other_fact: "{{ local_var * 2 }}"
    cacheable: yes

# As of Ansible 1.8, Ansible will convert boolean strings ('true', 'false', 'yes', 'no')
# to proper boolean values when using the key=value syntax, however it is still
# recommended that booleans be set using the complex argument style:
- set_fact:
    one_fact: yes
    other_fact: no